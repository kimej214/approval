<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.project.approval.repository.ApprovalMapper">

    <!-- 직급별 조회 (사원 전용) -->
    <select id="findApprovalsPagedByRole" parameterType="map" resultType="com.project.approval.dto.ApprovalListDTO">
        SELECT
        a.num,
        e1.emp_name AS writerId,
        a.title,
        a.content,
        a.reg_date AS regDate,
        a.appr_date AS apprDate,
        e2.emp_name AS approverId,
        s.status_code AS statusCode,
        s.status_name AS statusName
        FROM approval_list a
        LEFT JOIN approval_emp e1 ON a.writer_id = e1.user_id
        LEFT JOIN approval_emp e2 ON a.approver_id = e2.user_id
        LEFT JOIN approval_status s ON a.status_code = s.status_code
        LEFT JOIN positions p1 ON e1.position_cd = p1.position_cd
        WHERE a.status_code != 'TMP'
        <choose>
            <when test="levelNo &lt;= 2">
                AND a.writer_id = #{userId}
            </when>
            <when test="levelNo == 3">
                AND (
                a.writer_id = #{userId}
                OR (
                p1.level_no &lt; 3
                AND a.status_code = 'PND'
                AND (a.approver_id IS NULL OR a.approver_id = #{userId} OR a.approver_id = e1.user_id)
                )
                OR (a.approver_id = #{userId})
                )
            </when>
            <when test="levelNo == 4">
                AND (
                a.writer_id = #{userId}
                OR a.status_code IN ('APR','CMP')
                OR (a.approver_id = #{userId} AND a.status_code = 'REJ')
                )
            </when>
        </choose>
        ORDER BY a.num DESC
        LIMIT #{start}, #{pageSize}
    </select>

    <!--  직급별 totalCount -->
    <select id="countApprovalsByRole" parameterType="map" resultType="int">
        SELECT COUNT(*)
        FROM approval_list a
        LEFT JOIN approval_emp e1 ON a.writer_id = e1.user_id
        LEFT JOIN positions p1 ON e1.position_cd = p1.position_cd
        WHERE a.status_code != 'TMP'
        <choose>
            <when test="levelNo &lt;= 2">
                AND a.writer_id = #{userId}
            </when>
            <when test="levelNo == 3">
                AND (
                a.writer_id = #{userId}
                OR (
                p1.level_no &lt; 3
                AND a.status_code = 'PND'
                AND (a.approver_id IS NULL OR a.approver_id = #{userId} OR a.approver_id = e1.user_id)
                )
                OR (a.approver_id = #{userId})
                )
            </when>
            <when test="levelNo == 4">
                AND (
                a.writer_id = #{userId}
                OR a.status_code IN ('APR','CMP')
                OR (a.approver_id = #{userId} AND a.status_code = 'REJ')
                )
            </when>
        </choose>
    </select>

    <!-- 단일 결재 상세 조회 -->
    <select id="findApprovalByNum" parameterType="long" resultType="com.project.approval.dto.ApprovalListDTO">
        SELECT
        a.num, a.writer_id AS writerId, a.title, a.content,
        a.reg_date AS regDate, a.appr_date AS apprDate,
        a.approver_id AS approverId, a.status_code AS statusCode
        FROM approval_list a
        WHERE a.num = #{num}
    </select>

    <!-- 작성자의 임시저장 글 문서 조회 -->
    <select id="findDraftByWriter" resultType="com.project.approval.dto.ApprovalListDTO">
        SELECT
        num, writer_id AS writerId, title, content, reg_date AS regDate, status_code AS statusCode
        FROM approval_list
        WHERE writer_id = #{writerId}
        AND status_code = 'TMP'
        ORDER BY reg_date DESC
        LIMIT 1
    </select>

    <!-- 전체 개수 이거 현재는 안 쓰지만 관리자용이 필요하다면 놔둬도 좋을듯
    <select id="countApprovals" resultType="int">
        SELECT COUNT(*) FROM approval_list WHERE status_code != 'TMP'
    </select> -->

    <!-- 현재 최대 글번호 -->
    <select id="findMaxNum" resultType="long">
        SELECT MAX(num) FROM approval_list
    </select>

    <!-- 신규 결재 등록 (임시저장 or 결재요청) -->
    <insert id="insertApproval"
            parameterType="com.project.approval.dto.ApprovalListDTO"
            useGeneratedKeys="true"
            keyProperty="num">
        INSERT INTO approval_list
        (writer_id, title, content, reg_date, status_code)
        VALUES
        (#{writerId}, #{title}, #{content}, NOW(), #{statusCode})
    </insert>

    <!-- 상태 변경 -->
    <update id="updateStatus">
        UPDATE approval_list
        SET
        status_code = #{statusCode},
        approver_id = CASE
        WHEN #{approverId} IS NOT NULL THEN #{approverId}
        ELSE approver_id
        END,
        appr_date = CASE
        WHEN #{statusCode} IN ('APR','CMP','REJ') THEN CURRENT_DATE
        ELSE appr_date
        END
        WHERE num = #{num}
    </update>

    <!-- 임시저장(TMP) 상태를 결재대기(PND)로 변경 -->
    <update id="updateTempToPending" parameterType="string">
        UPDATE approval_list
        SET status_code = 'PND',
        appr_date = NOW()
        WHERE writer_id = #{writerId}
        AND status_code = 'TMP'
        ORDER BY reg_date DESC
        LIMIT 1
    </update>

    <!-- 방금 변경된 문서번호 조회 -->
    <select id="findLatestPendingByWriter" parameterType="string" resultType="long">
        SELECT num
        FROM approval_list
        WHERE writer_id = #{writerId}
        AND status_code = 'PND'
        ORDER BY num DESC
        LIMIT 1
    </select>

</mapper>